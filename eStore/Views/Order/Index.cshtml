@model IEnumerable<DataAccess.Models.Order>
@using DataAccess.Models;
@using DataAccess.Repository;
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!DOCTYPE html>
<html>
<head>
<meta name="viewport" content="width=device-width, initial-scale=1">
<style>
body {
  font-family: "Lato", sans-serif;
}

.sidenav {
  height: 100%;
  width: 0;
  position: fixed;
  z-index: 1;
  top: 0;
  left: 0;
  background-color: #111;
  overflow-x: hidden;
  transition: 0.5s;
  padding-top: 60px;
}

.sidenav a {
  padding: 8px 8px 8px 32px;
  text-decoration: none;
  font-size: 25px;
  color: #818181;
  display: block;
  transition: 0.3s;
}

.sidenav a:hover {
  color: #f1f1f1;
}

.sidenav .closebtn {
  position: absolute;
  top: 0;
  right: 25px;
  font-size: 36px;
  margin-left: 50px;
}

</style>
</head>
<body>

<div id="mySidenav" class="sidenav">
  <a href="javascript:void(0)" class="closebtn" onclick="closeNav()">&times;</a>
  <a href="../Product">Product</a>
  <a href="../Member">Member</a>
  <a href="../Order">Order</a>
  <a href="../OderDetail">OderDetail</a>
</div>


<span style="font-size:30px;cursor:pointer" onclick="openNav()">&#9776; open</span>
<h1>Index</h1>


@{
    string id = ViewBag.Id;
    if (id==null || id.Equals(""))
    {
        <p>You don't have permission to see it</p>
    }
    else
    {
        <p>
        
</p>
<input type="text" id="myInput" onkeyup="myFunction()" placeholder="Search for EVERYTHING in client.." title="Type in a name" style="width: 300px">
@using (Html.BeginForm("Index", "Order"))
{
    <div class="form-group">
        <input placeholder="Search for EVERYTHING in server.."  type="text" name="key" style="width: 300px" />
        <input type="submit" value="Search" />
    </div>
}
<table class="table" id="myTable">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.OrderId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MemberId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RequiredDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ShippedDate)
            </th>
            <th>
                            @Html.DisplayNameFor(model => model.Freight)
            </th>
            <th>
                Total
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.OrderId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MemberId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OrderDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RequiredDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ShippedDate)
            </td>
            <td>
                                @Html.DisplayFor(modelItem => item.Freight)
            </td>
                            @{
                                IOrderDetailRepository orderDetailRepository = new OrderDetailRepository();
                                IProductRepository productRepository = new ProductRepository();
                                IEnumerable<OrderDetail> orders = orderDetailRepository.GetAll().Where(x => x.OrderId == item.OrderId);
                                IEnumerable<Product> products = productRepository.GetAll();
                                var sum = orders
                                    .GroupJoin(products, xx => xx.ProductId, yy => yy.ProductId, (xx, yy) => new { xx.Discount, xx.Quantity, yy.FirstOrDefault()?.UnitPrice });
                                var total = sum.Sum(x => (x.Quantity * x.UnitPrice * (1 - (decimal)x.Discount)));
                                total = Math.Abs(total.Value);
                            }
            <td>
                @total
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id=item.OrderId}) |
                @Html.ActionLink("Details", "Details", new { id=item.OrderId }) |
                @Html.ActionLink("Delete", "Delete", new { id=item.OrderId }) |
                <a class="logout-btn" href="@Url.Action("IndexById", "OderDetail", new { id=item.OrderId })" > Detail order  </a>
            </td>
        </tr>
}
    </tbody>
</table>
    }
}
<script>
    function openNav() {
          document.getElementById("mySidenav").style.width = "250px";
        }

        function closeNav() {
          document.getElementById("mySidenav").style.width = "0";
        }
     function myFunction() {
          var input, filter, table, tr, td, i, txtValue;
          input = document.getElementById("myInput");
          filter = input.value.toUpperCase();
          table = document.getElementById("myTable");
          tr = table.getElementsByTagName("tr");
          for (i = 1; i < tr.length; i++) {
              var txtValue= "";
              for(j= 0; j< tr[i].getElementsByTagName("td").length; j++){
                  td = tr[i].getElementsByTagName("td")[j];
                  txtValue+=" " +  td.innerText;
              }
              if (txtValue.toUpperCase().indexOf(filter) > -1) {
                tr[i].style.display = "";
              } else {
                tr[i].style.display = "none";
              }    
          }
        }
</script>


</body>
</html> 

